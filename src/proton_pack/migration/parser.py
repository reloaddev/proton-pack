from typing import List

from sqlglot import exp, parse


def parse_sql_to_ast(sql) -> List[exp.Expression]:
    parsed = parse(sql, dialect="postgres")
    filtered = _remove_alembic_specific_statements(parsed)
    return [p for p in filtered if p is not None]


# SQL statements generated by Alembic (used by frameworks like Flask) should be ignored
# They do not provide any relevant information regarding AST of the target database
def _remove_alembic_specific_statements(ast: List[exp.Expression]) -> List[exp.Expression]:
    filtered = []
    for tree in ast:
        table = tree.find(exp.Table)
        table_name = table.name if table else None
        if table_name and "alembic" not in table_name.lower():
            filtered.append(tree)
    return filtered
